#!/usr/bin/env bash
set -e
# creating folder to install geos
mkdir $HOME/geos-build
GEOS_PATH=$HOME/geos-build
# Downloading geos
curl -L -O  https://github.com/libgeos/geos/releases/download/3.13.1/geos-3.13.1.tar.bz2

# uzipping geos into the geos directory
mkdir -p geos && cd geos
tar -xf ../geos-3.13.1.tar.bz2 --strip-components=1
# Building geos
mkdir -p build && cd build && cmake -DCMAKE_INSTALL_PREFIX:PATH=$GEOS_PATH -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF ..
make && make install

export PATH=$GEOS_PATH/bin:$PATH
export GEOS_INCLUDE_PATH=$GEOS_PATH/include
export GEOS_LIBRARY_PATH=$GEOS_PATH/lib
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$GEOS_PATH/lib
if [ ! -z "$CI" ]; then
    # Write the geos path to GITHUB_PATH so successive steps can use
    echo $GEOS_PATH/bin >> $GITHUB_PATH
    # Set these variables in GITHUB_ENV so successive steps can use them.
    echo "GEOS_INCLUDE_PATH=$GEOS_INCLUDE_PATH" >> $GITHUB_ENV
    echo "GEOS_LIBRARY_PATH=$GEOS_LIBRARY_PATH" >> $GITHUB_ENV
    echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> $GITHUB_ENV
fi

cd ../..
# disabled for linux32 build to run virtualenv properly
#python -m pip uninstall -y shapely
#python -m pip cache remove shapely
#python -m pip install -v shapely --no-binary shapely
#virtualenv/bin/pip uninstall -y shapely
#virtualenv/bin/pip cache remove shapely
#virtualenv/bin/pip install -v shapely
