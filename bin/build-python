#!/bin/bash

MY_VERBOSITY_LOG_LEVEL=${MY_VERBOSITY_LOG_LEVEL:'1'}  # Default level is 1 (INFO)

# MY_PYINSTALLER_LOG_LEVEL
case "$MY_VERBOSITY_LOG_LEVEL" in
    0) MY_PYINSTALLER_LOG_LEVEL="ERROR" ;;
    1) MY_PYINSTALLER_LOG_LEVEL="INFO"  ;;
    2) MY_PYINSTALLER_LOG_LEVEL="DEBUG" ;;
    3) MY_PYINSTALLER_LOG_LEVEL="TRACE" ;;
    *) MY_PYINSTALLER_LOG_LEVEL="INFO" # Fallback for unknown values
esac

if [[ "$MY_VERBOSITY_LOG_LEVEL" -ge 2 ]]; then
    set -x
fi

set -e

echo "------------------------------------------------- build-python.sh"

if [[ -z "$BUILD" ]]; then
  echo "Error: BUILD variable is not set."
  exit 1
fi


info_year=$( date "+%Y" )
ARCH="$(uname -m)"

MY_USE_AUTHORIZED_SIGNING=${MY_USE_AUTHORIZED_SIGNING:-false}

echo "MY_USE_AUTHORIZED_SIGNING=${MY_USE_AUTHORIZED_SIGNING}"
echo "BUILD=${BUILD}"
echo "ARCH=${ARCH}"
echo "VERSION=${VERSION}"  # may be set by the Makefile otherwise empty ??? why

# PyInstaller v6.x rearranges folder configuration causing broken builds, This re-enables old onedir layout.
pyinstaller_args+="--contents-directory . "

# - DEBUG: output useful debugging info that helps us trace library dependency issues
pyinstaller_args+="--log-level $MY_PYINSTALLER_LOG_LEVEL "

# Setting up pyinstaller arguments for each OS.
# This adds bundle identifier in reverse DSN format for macos
if [ "$BUILD" = "osx" ]; then
    pyinstaller_args+="--osx-bundle-identifier org.inkstitch.app "
    pyinstaller_args+="-i images/inkstitch/mac/inkstitch.icns "
    if [[ "${MY_USE_AUTHORIZED_SIGNING}" == "true" ]]; then
        echo "Using authorized signing keys for Release Build (macOS)."
        bash bin/import-macos-keys
    else
        echo "Not using authorized signing keys. Likely a Dev or Local Build."
    fi
elif [ "$BUILD" = "linux" ]; then
    pyinstaller_args+="--hidden-import gi.repository.Gtk "
    pyinstaller_args+="--add-binary /lib/${ARCH}-linux-gnu/libcrypt.so.1:. "
    pyinstaller_args+="--add-binary /lib/${ARCH}-linux-gnu/libnsl.so.1:. "
elif [ "$BUILD" = "linux32" ]; then
    pyinstaller_args+="--hidden-import gi.repository.Gtk "
    pyinstaller_args+="--add-binary /lib/i386-linux-gnu/libcrypt.so.1:. "
    pyinstaller_args+="--add-binary /lib/i386-linux-gnu/libnsl.so.1:. "
elif [ "$BUILD" = "windows" ]; then
    # TODO: why is this here?  It doesn't seem to be used, because VERSION is not set or "local-build" in Makefile
	if [[ "$VERSION" =~ ^v[0-9][.0-9]+$ ]]; then
		# setting the file and product version for release
		# Code to remove the periods in the version number
		ENT=.
		SAL=${VERSION#v}$ENT
		INFO_VERSION=()
		while [[ $SAL ]]; do
			INFO_VERSION+=( "${SAL%%"$ENT"*}" );
			SAL=${SAL#*"$ENT"};
		done;
		sed -i'' 's/3, 2, 1,/'"${INFO_VERSION[0]}, ${INFO_VERSION[1]}, ${INFO_VERSION[2]},"'/' installer_scripts/file_version_info.txt
	fi
		# set year and version in version_info
	sed -i'' 's/1.1.1/'"${VERSION#v}"'/' installer_scripts/file_version_info.txt
	sed -i'' 's/1234/'"${info_year}"'/' installer_scripts/file_version_info.txt
  	# sets icon to inkstitch.exe
	pyinstaller_args+="-i images/inkstitch/win/inkstitch.ico "
	pyinstaller_args+="--version-file  installer_scripts/file_version_info.txt "
fi

# Finally we build for windows and macOS with the finalized settings
if [ "$BUILD" = "osx" -o "$BUILD" = "windows" ]; then
    pyinstaller_args+="--windowed "  # no console window on macOS/Windows
fi

# Build the application with PyInstaller
python -m PyInstaller $pyinstaller_args inkstitch.py;


# Move dist/inkstitch/*  to  dist/inkstitch/bin
#   pyinstaller put a whole mess of libraries under dist/inkstitch.  We'd like
#   to put some more user-accessible stuff like examples and palettes in
#   folders under inkstitch/ (see ../Makefile) so let's move the pyinstaller
#   stuff into its own dir.
shopt -s dotglob     # * - to include hidden files
mkdir dist/bin
mv dist/inkstitch/* dist/bin
mv dist/bin dist/inkstitch   # now all the pyinstaller stuff is in dist/inkstitch/bin
mkdir artifacts

echo "------------------------------------------------- build-python.sh done"