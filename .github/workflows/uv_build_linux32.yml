
name: UV Linux32 build

# when the workflow should run
on:
  workflow_call:  # manual trigger of the workflow
    inputs:

      break_on: # ref: inputs.break_on
        description:  'Stop the build immediately at a predefined location.'
        required: true
        default: 'no'    # default value
        type: string  # type of the input, can be string, boolean, or number

      self_signed:
        description: 'Sign on the fly'
        required: true
        default: true
        type: string

    secrets:  # secrets that are required for the workflow, otherwise are not available
      INKSTITCH_GPG_KEY:
        required: true

# Jobs are steps that run on the same runner
jobs:
  linux32:  # name of the job
    env:
      MY_BREAK_ON: ${{ github.event.inputs.break_on }}
      MY_SELF_SIGNED: ${{ github.event.inputs.self_signed }}

    # Node required for actions, install follows
    # https://github.com/actions/upload-artifact/issues/616
    runs-on: ubuntu-latest
    container:
      image: linuxmintd/lmde6-i386  # Linux Mint Debian Edition 6 (LMDE6) i386
      volumes:
      - ${{ github.workspace }}:/__e/node20  # mount the workspace to the container, for node.js installation

    steps:
      - name: Download & setup Node - needed by Checkout
        shell: bash
        run: |

          ls -lar /__e/node20      # check if the directory is empty
          apt-get update
          apt-get install -y curl  # we need curl to download node.js
          curl -Lo /tmp/node.tar.gz https://unofficial-builds.nodejs.org/download/release/v20.17.0/node-v20.17.0-linux-x86.tar.gz
          cd /__e/node20           # change to the mounted workspace directory
          tar -x --strip-components=1 -f /tmp/node.tar.gz # extract the node.js archive


      # !!! this step effectively rewrites node installation done in the previous step !!!
      - name: Download Inkstitch # Download the source code, no submodules
        uses: actions/checkout@v4

      # Permissions problem that prevents caching
      # https://github.com/actions/setup-python/issues/816
      - name: Change ownership of /github/home
        run: sudo chown -R $(whoami) /github/home


      - name: Replace `node` with an i386 version
        shell: bash
        run: |

          ls -lar /__e/node20
          curl -Lo /tmp/node.tar.gz https://unofficial-builds.nodejs.org/download/release/v20.17.0/node-v20.17.0-linux-x86.tar.gz
          cd /__e/node20
          tar -x --strip-components=1 -f /tmp/node.tar.gz


      - name: Install uv  # https://docs.astral.sh/uv/guides/integration/github/
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Setup environment
        shell: bash
        run: |  # working directory is the root of the inkstitch repo

          echo "-------------------------------------- system information: /etc/os-release"
          cat /etc/os-release

          echo "-------------------------------------- input data"
          # input data
          echo "github.event.inputs.break_on: ${{ github.event.inputs.break_on }}"
          echo "inputs.break_on: ${{ inputs.break_on }}"

          echo "------------------------------ uv python list"
          uv python list
          uv python pin 311  # pin to local python version
          uv venv  # create a virtual environment with the pinned python version

          if [[ ${{ inputs.break_on }} == "uv" ]]; then
            echo "Stopping on request"
            exit 1
          fi

          echo "-------------------------------------- update apt"
          # install system dependencies
          sudo apt-get update  # update package list

          sudo gem install fpm # install fpm for packaging (Ruby gems)
          sudo apt-get install gettext # install gettext for translations (.po msgfmt)

          # for PyGObject 3.50 to compile
          sudo apt install libgirepository1.0-dev libcairo2-dev

          # for wxPython run
          sudo apt install libnotify4
          sudo apt install glib-networking libsdl2-2.0-0 # libsdl2-dev

          # for shapely & wxPython compile
          # sudo apt install build-essential libgtk-3-dev # cmake - use uv to install cmake

          echo "-------------------------------------- bin/uv/generate pyproject.toml"
          bin/uv/generate_pyproject.sh # generate pyproject.toml from uv config

          # debug

          echo "-------------------------------------- pyproject.toml"
          cat pyproject.toml

          echo "-------------------------------------- uv sync"
          uv sync # install dependencies from pyproject.toml

          # . .venv/bin/activate  # activate the virtual environment
          # type python

          # echo "pythonLocation: ${{ env.pythonLocation }}"  # empty - what is this good for
          # echo "GITHUB_PATH: $GITHUB_PATH"

          echo "--------------------------------------"




