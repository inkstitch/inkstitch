name: UV Windows64 build

# when the workflow should run
on:
  workflow_call:  # manual trigger of the workflow
    inputs:

      break_on: # ref: inputs.break_on
        description:  'Stop the build immediately at a predefined location.'
        required: true
        default: 'no'    # default value
        type: string  # type of the input, can be string, boolean, or number

      self_signed:
        description: 'Sign on the fly'
        required: true
        default: true
        type: string

      prerelease:
        description: 'Pre-release build'  # release build on tag v*  prerelease == false
        required: true
        default: true
        type: string

    secrets:  # secrets that are required for the workflow, otherwise are not available
      SIGNPATH_API_TOKEN:
        required: true


# Jobs are steps that run on the same runner
jobs:
  windows64:  # name of the job
    env:
      MY_BREAK_ON: ${{ github.event.inputs.break_on }}
      MY_SELF_SIGNED: ${{ github.event.inputs.self_signed }}
      MY_PRERELEASE: ${{ github.event.inputs.prerelease }}

    # define the OS of the runner
    runs-on: windows-2022
    steps:
      - name: Download Inkstitch         # Download the source code, no submodules
        uses: actions/checkout@v4        # https://github.com/actions/checkout


      - name: Install uv                 # https://docs.astral.sh/uv/guides/integration/github/
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true    # cache on requirements**, uv.lock is OS dependent, on exit 1 cache save is skipped
          cache-dependency-glob: pyproject.toml
          python-version: 311   # force version, use same in install python


      - name: Install msbuild             # https://github.com/microsoft/setup-msbuild
        uses: microsoft/setup-msbuild@v2


      - name: Setup Git for Windows SDK   # https://github.com/git-for-windows/setup-git-for-windows-sdk
        uses: git-for-windows/setup-git-for-windows-sdk@v1
        with:
          flavor: build-installers


      - name: Setup environment
        shell: bash
        run: |

          git config --system core.longpaths true

          echo "-------------------------------------- input data"
          # input data
          echo "github.event.inputs.break_on: ${{ github.event.inputs.break_on }}"
          echo "inputs.break_on: ${{ inputs.break_on }}"

          echo "MY_BREAK_ON: $MY_BREAK_ON"
          echo "MY_SELF_SIGNED: $MY_SELF_SIGNED"
          echo "MY_PRERELEASE: $MY_PRERELEASE"
          echo "secrets.SIGNPATH_API_TOKEN: ${{ secrets.SIGNPATH_API_TOKEN }}"

          echo "------------------------------ uv python list"
          uv python install 311  # install python 3.11 see cache
          uv python list
          uv python pin 311  # pin to local python version
          uv venv  # create a virtual environment with the pinned python version

          if [[ ${{ inputs.break_on }} == "uv" ]]; then
            echo "Stopping on request"
            exit 1
          fi

          # echo "-------------------------------------- bin/uv/generate pyproject.toml"
          # bin/uv/generate_pyproject.sh # generate pyproject.toml from uv config

          cat pyproject.toml

          uv sync --inexact # install dependencies from pyproject.toml & keep installed packages
          uv pip tree  # print installed packages

          . .venv/Scripts/activate  # activate the virtual environment
          type python

          if [[ $MY_BREAK_ON == "sync" ]]; then
            echo "Stopping on request $MY_BREAK_ON"
            exit 1
          fi

          echo "--------------------------------------"



      - name: Build dist
        shell: bash
        run: |

          . .venv/Scripts/activate  # activate the virtual environment
          type python  # check python version

          make dist
        env:
          BUILD: windows

      # TODO: Enhance condition to check for 'secrets.SIGNPATH_API_TOKEN' availability,
      #       not just the 'v*' tag, for more robust signing logic.

      - name: Set signing policy to release - tag v*
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        shell: bash
        run: |

          # set var release_policy to ENV for next steps
          echo release_policy="release-signing" >> $GITHUB_ENV


      - name: upload-unsigned-exe - tag v*
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        id: upload-unsigned-exe  # ref steps.upload-unsigned-exe.outputs...
        uses: actions/upload-artifact@v4
        with:
          name: inkstitch-windows64-exe         # output name
          path: |                               # input file
            dist/inkstitch/bin/inkstitch.exe


      - name: Sign-exe - tag v* # https://github.com/SignPath/github-action-submit-signing-request
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        id: Sign-exe            # ref steps.Sign-exe.outputs...
        uses: signpath/github-action-submit-signing-request@v1.1
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '6b880880-2af8-4cf3-a8e7-1b4977c593df'
          project-slug: 'inkstitch'
          signing-policy-slug: '${{ env.release_policy }}'
          github-artifact-id: '${{ steps.upload-unsigned-exe.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'signed-artifacts'


      - name: Copy signed exe to dist - tag v*
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        shell: bash
        run: |
            mv  -f signed-artifacts/inkstitch.exe dist/inkstitch/bin/inkstitch.exe

      # common for signed and unsigned
      - name: Build windows installer
        shell: bash
        run: |
          bash bin/build-windows-installer
        env:
          BUILD: windows


      # This installer will be signed in a subsequent step.
      - name: upload-unsigned-installer - tag v*
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        id: upload-unsigned-installer
        uses: actions/upload-artifact@v4       # https://github.com/actions/upload-artifact
        with:
          name: inkstitch-windows64-installer  # output name
          path: artifacts                      # whole directory


      - name: Sign-installer  - tag v*
        if: env.MY_PRERELEASE == 'false'  # only for release builds
        id: Sign-installer
        uses: signpath/github-action-submit-signing-request@v1.1  # https://github.com/SignPath/github-action-submit-signing-request
        with:
          api-token: '${{ secrets.SIGNPATH_API_TOKEN }}'
          organization-id: '6b880880-2af8-4cf3-a8e7-1b4977c593df'
          project-slug: 'inkstitch'
          signing-policy-slug: '${{ env.release_policy }}'
          artifact-configuration-slug: 'windows-installer-config'
          github-artifact-id: '${{ steps.upload-unsigned-installer.outputs.artifact-id }}'
          wait-for-completion: true
          output-artifact-directory: 'signed-artifacts'


      - uses: actions/upload-artifact@v4        # https://github.com/actions/upload-artifact
        with:
          name: inkstitch-windows64
          path: signed-artifacts

