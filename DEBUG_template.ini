[LIBRARY]
;;; use the pip installed version of inkex.py, default: True
; prefer_pip_inkex = False

[LOGGING]
;;; logging configuration file, default: none - use implicit DEBUG logging to inkstitch.log
;;; we may have multiple configurations: LOGGING.toml, LOGGING1.toml, LOGGING2.toml, etc.
; log_config_file = LOGGING.toml

;;; disable globally logging: default: False - using logging.disable()
;;;   reenable logging.disable(0)
; disable_logging = True


[DEBUG]
;;; simulate frozen mode, overwrite running_as_frozen in inkstitch.py, default: False
; force_frozen = True

;;; select one active debug_type, default: none
; debug_type = vscode
; debug_type = pycharm
; debug_type = pydev

;;; enable debugger, see cmd line arg -d, default: False
; debug_enable = True

;;; debug log output to file even if debugger is not enabled, default: False
; debug_to_file = True

;;; disable debugger when calling from inkscape, default: False
; disable_from_inkscape = True

;;; wait for debugger to attach (vscode), default: True
; wait_attach = False

;;; debug log file, default: debug.log
; debug_log_file = debug.log

;;; debug file for graph related things, default: debug.svg
; debug_svg_file = debug.svg

;;; creation of bash script, default: False
; create_bash_script = True

;;; base name for bash script, default: debug_inkstitch
; bash_file_base = debug_inkstitch

[PROFILE]
;;; select one active profiler_type, default: none
; profiler_type = cprofile
; profiler_type = profile
; profiler_type = pyinstrument

;;; enable profiler, see cmd line arg -p, default: False
; profile_enable = True

;;; base name for profile output files, default: debug_profile
; profile_file_base = debug_profile

